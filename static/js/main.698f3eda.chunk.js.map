{"version":3,"sources":["colorsArray.js","App.js","reportWebVitals.js","index.js"],"names":["COLORS_ARRAY","App","props","handleClick","listOfQuotes","state","quotesArray","accentColor","Math","floor","length","random","index","setState","quote","author","character","colors","error","bind","fetch","then","res","json","result","id","style","color","this","className","title","target","href","encodeURI","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAoDeA,G,MApDM,CACnB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,Y,OCmCaC,E,kDA9Eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA6BRC,YAAc,WACZ,IAAMC,EAAe,EAAKC,MAAMC,YAC1BC,EAAcC,KAAKC,MAAMT,EAAaU,OAASF,KAAKG,UACpDC,EAAQJ,KAAKC,MAAML,EAAaM,OAASF,KAAKG,UACpD,EAAKE,SAAS,CACZC,MAAOV,EAAaQ,GAAOE,MAC3BC,OAAQX,EAAaQ,GAAOI,UAC5BC,OAAQjB,EAAaO,MAnCvB,EAAKF,MAAQ,CACXC,YAAa,GACbQ,MACE,iOACFC,OAAQ,gBACRE,OAAQ,KACRC,MAAO,MAET,EAAKf,YAAc,EAAKA,YAAYgB,KAAjB,gBAVF,E,qDAanB,WAAqB,IAAD,OAClBC,MAhBF,8FAiBKC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACC,SAACG,GACC,EAAKX,SAAS,CACZP,YAAa,CAACkB,GAAQ,QAG1B,SAACN,GACC,EAAKL,SAAS,CACZK,e,oBAgBV,WACE,OACE,qBAAKO,GAAG,UAAUC,MAAO,CAAEC,MAAOC,KAAKvB,MAAMY,QAA7C,SACE,sBAAKQ,GAAG,YAAR,UACE,sBAAKI,UAAU,aAAf,UACE,mBAAGA,UAAU,qBACb,sBAAMJ,GAAG,SACT,4BAAIG,KAAKvB,MAAMS,WAEjB,qBAAKe,UAAU,eAAf,SACE,oBAAGJ,GAAG,SAAN,eAAkBG,KAAKvB,MAAMU,YAE/B,sBAAKc,UAAU,UAAf,UACE,mBACEA,UAAU,SACVC,MAAM,oBACNC,OAAO,IACPC,KAAMC,UAAU,yDAAD,OAC4CL,KAAKvB,MAAMS,MADvD,aACiEc,KAAKvB,MAAMU,SAE3FU,GAAG,cAPL,SASE,mBAAGI,UAAU,oBAEf,wBACEA,UAAU,SACVJ,GAAG,YACHS,QAASN,KAAKzB,YAHhB,mC,GAjEMgC,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.698f3eda.chunk.js","sourcesContent":["const COLORS_ARRAY = [\r\n  \"#FF6633\",\r\n  \"#FFB399\",\r\n  \"#FF33FF\",\r\n  \"#FFFF99\",\r\n  \"#00B3E6\",\r\n  \"#E6B333\",\r\n  \"#3366E6\",\r\n  \"#999966\",\r\n  \"#99FF99\",\r\n  \"#B34D4D\",\r\n  \"#80B300\",\r\n  \"#809900\",\r\n  \"#E6B3B3\",\r\n  \"#6680B3\",\r\n  \"#66991A\",\r\n  \"#FF99E6\",\r\n  \"#CCFF1A\",\r\n  \"#FF1A66\",\r\n  \"#E6331A\",\r\n  \"#33FFCC\",\r\n  \"#66994D\",\r\n  \"#B366CC\",\r\n  \"#4D8000\",\r\n  \"#B33300\",\r\n  \"#CC80CC\",\r\n  \"#66664D\",\r\n  \"#991AFF\",\r\n  \"#E666FF\",\r\n  \"#4DB3FF\",\r\n  \"#1AB399\",\r\n  \"#E666B3\",\r\n  \"#33991A\",\r\n  \"#CC9999\",\r\n  \"#B3B31A\",\r\n  \"#00E680\",\r\n  \"#4D8066\",\r\n  \"#809980\",\r\n  \"#E6FF80\",\r\n  \"#1AFF33\",\r\n  \"#999933\",\r\n  \"#FF3380\",\r\n  \"#CCCC00\",\r\n  \"#66E64D\",\r\n  \"#4D80CC\",\r\n  \"#9900B3\",\r\n  \"#E64D66\",\r\n  \"#4DB380\",\r\n  \"#FF4D4D\",\r\n  \"#99E6E6\",\r\n  \"#6666FF\",\r\n];\r\nexport default COLORS_ARRAY;\r\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport COLORS_ARRAY from \"./colorsArray\";\n\nconst URL =\n  \"https://raw.githubusercontent.com/yoscheherazade/the-office-quotes-json/master/quotes.json\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotesArray: [],\n      quote:\n        \"Don't ever, for any reason, do anything for anyone, for any reason, ever, no matter what. No matter where. Or who, or who you are with, or where you are going or... or where you've been... ever. For any reason, whatsoever.\",\n      author: \"Michael Scott\",\n      colors: null,\n      error: null,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(URL)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            quotesArray: [result][0],\n          });\n        },\n        (error) => {\n          this.setState({\n            error,\n          });\n        }\n      );\n  }\n\n  handleClick = () => {\n    const listOfQuotes = this.state.quotesArray;\n    const accentColor = Math.floor(COLORS_ARRAY.length * Math.random());\n    const index = Math.floor(listOfQuotes.length * Math.random());\n    this.setState({\n      quote: listOfQuotes[index].quote,\n      author: listOfQuotes[index].character,\n      colors: COLORS_ARRAY[accentColor],\n    });\n  };\n  render() {\n    return (\n      <div id=\"wrapper\" style={{ color: this.state.colors }}>\n        <div id=\"quote-box\">\n          <div className=\"quote-text\">\n            <i className=\"fa fa-quote-left\"></i>\n            <span id=\"text\"></span>\n            <p>{this.state.quote}</p>\n          </div>\n          <div className=\"quote-author\">\n            <p id=\"author\">~ {this.state.author}</p>\n          </div>\n          <div className=\"buttons\">\n            <a\n              className=\"button\"\n              title=\"Tweet this quote!\"\n              target=\"#\"\n              href={encodeURI(\n                `https://twitter.com/intent/tweet?hashtags=quotes&text=${this.state.quote} ~${this.state.author}`\n              )}\n              id=\"tweet-quote\"\n            >\n              <i className=\"fa fa-twitter\"></i>\n            </a>\n            <button\n              className=\"button\"\n              id=\"new-quote\"\n              onClick={this.handleClick}\n            >\n              New Quote\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}